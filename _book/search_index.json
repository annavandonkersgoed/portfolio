[["index.html", "Portfolio DataScience for Biology 1 Introduction", " Portfolio DataScience for Biology Anna van Donkersgoed 2024-05-21 1 Introduction Iets van introductie voor dit portfolio "],["cirriculum-vitea.html", "2 Cirriculum Vitea", " 2 Cirriculum Vitea Mijn naam is Anna van Donkersgoed en ik ben momenteel derdejaars student aan de opleiding Life Sciences aan de Hogeschool Utrecht. Mijn specialisatie is Data Science, daarnaast ben ik ook geïnteresseerd in Metagenomics. Ik ben een behulpzaam en leergierig persoon. Ik ben momenteel op zoek naar een stage waarin ik mijn vaardigheden en het geleerde van mijn opleiding kan gaan toepassen. Contactgegevens Naam: Anna van Donkersgoed Mail: anna.vandonkersgoed@student.hu.nl Opleidingen Jaar Diploma School Plaats 2020-heden Life Sciences Hogeschool Utrecht Utrecht, Nederland 2021 propedeuse Life Scieces Hogeschool Utrecht Utrecht, Nederland 2015 - 2020 HAVO Anna van Rijn college Nieuwegein, Nederland Laboratorium vaardigheden Microbiologische technieken: Tijdens mijn opleiding heb ik verschillende microbiologische technieken geleerd. Voorbeelden hiervan zijn het maken van een grampreparaat, verdunningsreeksen en reinkweken maken, platen aanenten met bacteriën en deze bacterie kolonies doorzetten. Project influenza: Ik heb ook een microbiologisch project gehad op school wat over het verloop en de determinatie van het influenza virus ging. In het project werd er gekeken naar of patiënten het influenza virus hebben/hebben gehad door middel van real time PCR en determinatie testen. Bacteriën identificeren: Ik heb geleerd hoe bacteriesoorten zijn te identificeren, op welke kenmerken er gelet moeten worden en welke testen er gebruikt kun worden om de soorten te identificeren. Een voorbeeld van de testen die wij gebruikt hebben zijn de Vitek, de API, de streptex en de katalase test. Datascience vaardigheden Programmeertalen: bash en R RNA sequencing: Ik heb geleerd hoe RNA sequencing data verwerkt kan worden om te achterhalen welke genen erg tot expressie komen. Dit werd gedaan doormiddel van PCA, heatmaps, volcano plots en een GO enrichment analyse. Metagenomics: Ik heb geleerd hoe een metagenomics analyse uitgevoerd wordt doormiddel van kraken2 en bracken. Ook heb ik gewerkt met het programma DeepMicrobes om taxonomische classificatie uit te voeren zonder een voledige database door middel van deep learning. Overige vaardigheden Excel Talen: Nederlands moedertaal, Engels hoog niveau Werkervaring Jaar Functie Bedrijf Plaats 2022 - 2024 Horecamedewerker DE KOM, stadstheater en kunstencentrum Nieuwegein, Utrecht 2021 - 2022 Horecamedewerker de Kraam Nieuwegein, Utrecht 2019 - 2021 Vakkenvuller Boon’s mark Makadocenter, Nieuwegein Vrijwilligerswerk Jaar Vrijwilliger Organisatie Plaats 2021 - heden Leiding, leeftijd 7 tot 12 jaar Scouting Jan van Hoof Nieuwegein, Utrecht 2019 - 2021 Leiding, leeftijd 5 tot 7 jaar Scouting Jan van Hoof Nieuwegein, Nieuwegein Ik geef elke week leiding bij scouting. Ik heb in de tijd dat ik leiding geef op scouting geleerd hoe je goed kan samenwerken en goed kan communiceren. Zelf zit ik ook in het bestuur van mijn eigen leeftijdsgroep en heb ik daar de functie secretaris. Competenties: Analytisch Creatief Oplossingsgericht Sociaal Behulpzaam Luisterend "],["looking-ahead.html", "3 Looking ahead", " 3 Looking ahead In 2 jaar zie ik mezelf werken bij een bedrijf dat samenwerkt met laboratorium vaardigheden en Data Science. Het lijkt mij erg interessant om bij een bedrijf te werken wat bezig is met micro organismen in verband met ziektebeelden in combinatie met Data Science. Op dit moment ben ik bezig om mijn doel te bereiken door als specialisatie Data Science te kiezen. Ik ben ook al naar bedrijven aan het kijken die mogelijk samenwerken met het laboratorium en Data Science. Ook ga ik 15 december langs bij een laboratorium om te zien of een hybride stage me leuk lijkt of dat ik liever alleen een stage in Data Science wil doen. Ik wil de komende jaren graag wat skills leren. Als programmeertaal wil ik beginnen met het leren van Python. Ik wil me ook verdiepen in eiwit modulering, mutatie analyses en anitlichaam ontwerp om mijn vaardigheden uit te breiden. Planning vaardigheden: Python: "],["guerilla-analytics.html", "4 Guerilla analytics", " 4 Guerilla analytics Deze assignment draaide om Guerilla analytics. Afbeelding 1, Indeling van Folders en bestanden "],["c.elegans-plate-experiment.html", "5 C.elegans plate experiment", " 5 C.elegans plate experiment In dit experiment zijn C.elegans nematoden blootgesteld aan verschillende concentraties van verschillende stoffen. Hierbij werd gekeken naar het aantal nakomelingen na incubatie met de desbetreffende stof. Het doel van het experiment is om te kijken wat het effect van de stof op het aantal nakomelingen van de C.elegans zijn. De verkregen data uit het experiment wordt hier verder verwerkt. Data is verkregen van J. Louter (INT/ILC) De eerste stap is om het Excel bestand in te lezen in R Celegans_dataset &lt;- read_excel(here::here(&quot;data-raw&quot;, &quot;Data010&quot;, &quot;CE.LIQ.FLOW.062_Tidydata.xlsx&quot;), sheet = 1) Na het inlezen van de data worden de kolommen van de data gecontroleerd en wordt er gekeken naar wat voor soort data het is. In dit geval staat de ruwe data als double maar moet het een integer zijn aangezien er naar nakomelingen wordt gekeken en dus hele getallen zijn. Ook moet de compConcentration van character veranderd worden naar numeric aangezien het een waarde is. Als laatst moeten de compName veranderd worden naar een factor aangezien het categorical data is. #RawData veranderen van dbl naar int Celegans_dataset$RawData &lt;- as.integer(Celegans_dataset$RawData) #compName veranderen van character naar factor Celegans_dataset$compName &lt;- as.factor(Celegans_dataset$compName) #compConcentration veranderen van character naar numeric Celegans_dataset$compConcentration &lt;- as.numeric(Celegans_dataset$compConcentration) Na het veranderen van de data word een plot gemaakt #Om ervoor te zorgen dat de dataset niet door 0 heen gaat voor de output van de grafiek Celegans_dataset$compConcentration_offset &lt;- Celegans_dataset$compConcentration + 0.001 #Plot met de aangepaste C.elegans data met het gebruik van geom jitter Celegans_plot &lt;- ggplot(data = Celegans_dataset, aes(x = compConcentration_offset, y = RawData)) + geom_jitter(aes(color = compName, shape = expType), size = 3, alpha = 0.8, width = 0.1, height = 0) + scale_x_continuous(trans = &quot;log10&quot;, breaks = c(0.001, 0.01, 0.1, 1, 10)) + labs(title = &quot;Aantal nakomelingen C.elegans na incubatie&quot;, subtitle = &quot;Het aantal nakomelingen van de C.elegans na de incubatie met verschillende concentraties van verschillende stoffen &quot;, y = &quot;Aantal nakomelingen &quot;, x = &quot;Concentratie (nM) &quot;) + theme_classic() Celegans_plot Uit de bovenstaande grafiek is te zien dat de positieve controle voor het experiment Ethanol is en de negatieve controle S-medium. Data analyze: Eerste stap is om te kijken of de data normaal verdeeld is doormiddel van een Spahiro-Wilk test. Als de data normaaal verdeeld is wordt er een ANOVA test gedaan om de cpncentraties met elkaar te vergelijken. Als laatste stap wordt de data genormaliseerd. Hierdoor kan er makkelijker vergeleken worden met de negatieve controle of er een significant verschil is. #Berekenen van het gemiddelde van de negatieve controle Celegans_negative &lt;- Celegans_dataset %&gt;% filter(expType == &quot;controlNegative&quot;) mean_control_negative &lt;- mean(Celegans_negative$RawData) #Gemiddelde van de negatieve controle is 85.9 Celegans_dataset_norm &lt;- Celegans_dataset #Zorg ervoor dat de data 1 is door alle waarden door het gemiddelde te delen Celegans_dataset_norm$RawData &lt;- (Celegans_dataset_norm$RawData / mean_control_negative) Van de genormaliseerde data wordt een grafiek gemaakt Celegans_dataset_norm$compConcentration_offset &lt;- Celegans_dataset_norm$compConcentration + 0.001 Celegans_plot_normalized &lt;- ggplot(data = Celegans_dataset_norm, aes(x = compConcentration_offset, y = RawData)) + geom_jitter(aes(color = compName, shape = expType), size = 3, alpha = 0.8, width = 0.1, height = 0) + scale_x_continuous(trans = &quot;log10&quot;, breaks = c(0.001, 0.01, 0.1, 1, 10)) + labs(title = &quot;Fractie aantal nakomelingen C.elegans na incubatie&quot;, subtitle = &quot;Het aantal nakomelingen van de C.elegans na de incubatie met verschillende concentraties van verschillende stoffen &quot;, y = &quot;Fractie aantal nakomelingen &quot;, x = &quot;Concentratie (nM) &quot;) + theme_classic() Celegans_plot_normalized "],["open-peer-review.html", "6 Open peer review", " 6 Open peer review Het onderzoek dat beoordeeld word is: Link naar artikel "],["reletional-databases.html", "7 Reletional databases", " 7 Reletional databases Hier komt mijn relational databases te staan #Laad the fku data in drie verschillende dataframes in R #gapminder, Health and income outcomes for 184 countries from 1960 to 2016 install.packages(“dslabs”) library(dslabs) head(gapminder) #download dengue_data.csv library(tidyverse) dengue_data &lt;- read_csv(here::here(“data”, “dengue_data.csv”), skip = 11) head(dengue_data) #dowload flu_data.csv library(tidyverse) flu_data &lt;- read_csv(here::here(“data”, “flu_data.csv”), skip = 11) head(flu_data) #Check of de data tidy is, zo niet verander het naar tidy data ##De data is niet tidy. Er zijn veel na values aanwezig. Niet elke variabelen heeft een eigen kolom en niet elke observatie heeft een eigen rij. Je wilt het liefst onderscheiden per jaar, maand, dag, land etc #dengue dataset veranderen naar tidy data #Check welke landen er zijn colnames(dengue_data) dengue_tidy &lt;- pivot_longer(data = dengue_data, cols = c(‘Argentina’:‘Venezuela’), names_to = “country”, values_to = “cases”) dengue_tidydata &lt;- separate(dengue_tidy, Date, into = c(“year”, “month”, “day”)) #flu dataset veranderen naar tidy data #Check welke landen er zijn colnames(flu_data) flu_tidy &lt;- pivot_longer(data = flu_data, cols = c(‘Argentina’:‘Uruguay’), names_to = “country”, values_to = “cases”) flu_tidydata &lt;- separate(flu_tidy, Date, into = c(“year”, “month”, “day”)) #Verander de country en date variabelen van de drie data tabellen zodat ze met elkaar overeenkomen op data type, klasse en waarden. gapminder_tbl &lt;- tibble(gapminder) #data type komen niet met elkaar overeen ##Year:int, country:factor #country as factor flu_tidydata\\(country &lt;- factor(flu_tidydata\\)country) dengue_tidydata\\(country &lt;- factor(dengue_tidydata\\)country) #year as int flu_tidydata\\(year &lt;- as.integer(flu_tidydata\\)year) dengue_tidydata\\(year &lt;- as.integer(dengue_tidydata\\)year) #dubbel checken: flu_tidydata dengue_tidydata gapminder_tbl #Bewaar de 3 tabellen als .csv en .rds bestanden #Bewaren als .csv file write.csv(flu_tidydata, here::here(“data”, “flu_tidydata.csv”), row.names = FALSE) write.csv(dengue_tidydata, here::here(“data”, “dengue_tidydata.csv”), row.names = FALSE) write.csv(gapminder_tbl, here::here(“data”, “gapminder_tidydata.csv”), row.names = FALSE) #Bewaren als .rds file saveRDS(flu_tidydata, file = here::here(“data”, “flu_tidydata.rds”)) saveRDS(dengue_tidydata, file = here::here(“data”, “dengue_tidydata.rds”)) saveRDS(gapminder_tbl, file = here::here(“data”, “gapminder_tidydata.rds”)) #Maak in Dbeaver een nieuwe PostgreSQL database genaamd workflowsdb #voeg de tabellen in de database #inspecteer de inhoud van de databse met sql en bewaar het sql script #inspecteer de inhoud van de tabellen met dplyr in R #laad de gapminder data in R en verander de dataframe zodat dit samengevoegd kan worden met dengue en flu #Voer joins uit met sql #maak een samengevoegde tabel en export dit van de database naar R #Voer statistiek uit op de tabel "],["r-package.html", "8 R package", " 8 R package Hier komt mijn R package te staan "],["r-markdown.html", "9 R markdown", " 9 R markdown Hier komt de uitwerking van R markdown te staan "],["covid-19-data.html", "10 covid 19 data", " 10 covid 19 data Hier komt COVID-19 te staan "],["eigen-ruimte.html", "11 Eigen ruimte", " 11 Eigen ruimte hier komt mijn eigen ruimte te staan "]]
